@model AddExamDTO

@{
    ViewBag.Title = "Add Exam";
    SuccessResult notification = null;
    if (ViewBag.Notification != null)
    {
        notification = ViewBag.Notification;
    }
}

@section Styles{
    <link href="~/lib/toastr/toastr.min.css" rel="stylesheet" />
}

<h2>Add Exam</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.StudentId, "StudentId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("StudentId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.StudentId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SubjectId, "SubjectId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("SubjectId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SubjectId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProfessorId, "ProfessorId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ProfessorId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ProfessorId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Points, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Points, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Points, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Grade, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Grade, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Grade, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="col-md-12">
        <div class="row">
            <div class="col-md-6">
                <a asp-action="Index" asp-controller="Exams" class="btn btn-primary">Back to List</a>
            </div>
            <div class="col-md-4">
                <input style="float:right !important;" type="submit" value="Add" class="btn btn-success" />
            </div>
        </div>

    </div>
</div>
}


@section Scripts {
    <script src="~/lib/jquery-validation/dist/additional-methods.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script src="~/lib/toastr/toastr.min.js"></script>
    <script>
            $(function () {

                @if (notification != null)
                {
                    if (notification.Success)
                    {

                       @:toastr.success('@notification.Message');

                    }
                    else
                    {
                       @:toastr.error('@notification.Message');
                    }
                }

            });
    </script>
}
